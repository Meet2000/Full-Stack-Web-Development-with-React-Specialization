{"version":3,"sources":["component/LoadingComponent.js","shared/baseUrl.js","component/HomeComponent.js","component/MenuComponent.js","component/ContactComponent.js","component/DishdetailComponent.js","component/AboutComponent.js","component/HeaderComponent.js","component/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","component/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","key","id","to","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","RenderDish","top","RenderComments","comments","c","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderLeader","tag","left","middle","object","body","heading","subheading","About","leaders","title","list","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c84d4191.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading)\r\n        return(\r\n            <Loading />\r\n        );\r\n    else if (errMess)\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    else\r\n        return(\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading}\r\n                     errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading}\r\n                     errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading}\r\n                     errMess={props.leadersErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return(\r\n        <Card key={dish.id}>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    else if (props.dishes.errMess)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is : ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        // alert('Current State is : ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                                className=\"form-check-input\" /> \r\n                                            {' '} <strong>May we contact you ?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row >\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalBody, ModalHeader, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    if (dish != null) {\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null) {\r\n\r\n        return(\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {comments.map((c) => {\r\n                            return(\r\n                                <Fade in>\r\n                                    <li>\r\n                                        <p>{c.comment}</p>\r\n                                        <p>-- {c.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(c.date)))}</p>\r\n                                    </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    else if (props.errMess)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    else if (props.dish != null)\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return(\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <Media subheading>{leader.designation}</Media>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader leader={leader} />\r\n            </Fade>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaders}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username : \" + this.username.value + \" Password : \" + this.password.value + \" Remember : \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='../../public/assets/images/logo.png' height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, \r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, \r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, \r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status + ' : ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, \r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const values = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    values.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(values),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => alert('Thank you for your feedback!' + JSON.stringify(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: ' + error.message); });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders()),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return(\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                 dishesLoading={this.props.dishes.isLoading}\r\n                 dishesErrMess={this.props.dishes.errMess}\r\n                 promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                 promoLoading={this.props.promotions.isLoading}\r\n                 promoErrMess={this.props.promotions.errMess}\r\n                 leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                 leadersLoading={this.props.leaders.isLoading}\r\n                 leadersErrMess={this.props.leaders.errMess} />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                  isLoading={this.props.dishes.isLoading}\r\n                  errMess={this.props.dishes.errMess}\r\n                  comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                  commentsErrMess={this.props.comments.errMess}\r\n                  postComment={this.props.postComment} />\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                <Header />\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                            <Switch>\r\n                                <Route path='/home' component={HomePage} />\r\n                                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} /> } />\r\n                                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                                <Route path='/menu/:dishId' component={DishWithId} />\r\n                                <Route path='/aboutus' component={() => <About leaders={this.props.leaders} /> } />\r\n                                <Redirect to='/home' />\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: [] \r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null, \r\n        comments:[]\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions:[]\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './component/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}